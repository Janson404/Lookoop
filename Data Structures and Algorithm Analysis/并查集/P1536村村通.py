# coding:utf-8

"""
题目描述
某市调查城镇交通状况，得到现有城镇道路统计表。表中列出了每条道路直接连通的城镇。市政府 "村村通工程" 的目标是使全市任何两个城镇间都可以实现交通（但不一定有直接的道路相连，只要相互之间可达即可）。请你计算出最少还需要建设多少条道路？

输入格式
输入包含若干组测试测试数据，每组测试数据的第一行给出两个用空格隔开的正整数，分别是城镇数目 n 和道路数目 m ；随后的 m 行对应 m 条道路，每行给出一对用空格隔开的正整数，分别是该条道路直接相连的两个城镇的编号。简单起见，城镇从 1 到 n 编号。

注意：两个城市间可以有多条道路相通。

输出格式
对于每组数据，对应一行一个整数。表示最少还需要建设的道路数目。

输入输出样例
输入
4 2
1 3
4 3
3 3
1 2
1 3
2 3
5 2
1 2
3 5
999 0
0
输出
1
0
2
998
说明/提示
数据规模与约定
对于 100\%100% 的数据，保证 1 \le n < 10001≤n<1000 。
"""

fa = []

def init(n):
	global fa
	fa = [i for i in range(n+1)]

def find(x):
	if x == fa[x]:
		return x
	else:
		return find(fa[x])

def main():
	global fa
	n, m = 4, 2
	roads = [[1,3], [4,3]]

	init(n)
	for road in roads:
		fa[find(road[0])] = find(road[1])

	ret = 0
	for i in range(1, n+1):
		if find(i) == i:	# 当前节点的父节点为自身时即当前节点没有在图中
			ret += 1

	ret -= 1
	
	print(ret)

if __name__ == '__main__':
	main()